apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xaks.azure.platformref.crossplane.io
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "3"
  labels:
    provider: azure
spec:
  compositeTypeRef:
    apiVersion: azure.platformref.crossplane.io/v1alpha1
    kind: XAKS
  resources:
    - base:
        apiVersion: containerservice.azure.upbound.io/v1beta1
        kind: KubernetesCluster
        spec:
          forProvider:
            location: westus3
            version: "1.30.3"
        providerConfigRef:
          name: default
      patches:
        - fromFieldPath: metadata.labels
          toFieldPath: metadata.labels
        - fromFieldPath: spec.id
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-aks"
        - fromFieldPath: spec.id
          toFieldPath: metadata.annotations[crossplane.io/external-name]
          transforms:
            - type: string
              string:
                fmt: "%s-aks"
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.resourceGroupNameSelector.matchLabels[azure.platformref.crossplane.io/app]
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.vnetSubnetIdSelector.matchLabels[azure.platformref.crossplane.io/app]
        - fromFieldPath: spec.id
          toFieldPath: spec.forProvider.dnsNamePrefix
        - fromFieldPath: spec.parameters.nodes.size
          toFieldPath: spec.forProvider.defaultNodePool.vmSize
          transforms:
          - type: map
            map:
              small: Standard_B2ats_v2
              medium: Standard_B2als_v2
              large: Standard_B2as_v2
        - fromFieldPath: "spec.parameters.nodes.count"
          toFieldPath: "spec.forProvider.nodeCount"
        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
          toFieldPath: spec.writeConnectionSecretToRef.namespace
        - fromFieldPath: spec.id
          toFieldPath: spec.writeConnectionSecretToRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-aks"
      connectionDetails:
        - fromConnectionSecretKey: kubeconfig
    # - base:
    #     apiVersion: helm.crossplane.io/v1beta1
    #     kind: ProviderConfig
    #     spec:
    #       credentials:
    #         source: Secret
    #         secretRef:
    #           key: kubeconfig
    #   patches:
    #     - fromFieldPath: metadata.labels
    #       toFieldPath: metadata.labels
    #     - fromFieldPath: spec.id
    #       toFieldPath: metadata.name
    #     - fromFieldPath: spec.writeConnectionSecretToRef.namespace
    #       toFieldPath: spec.credentials.secretRef.namespace
    #     # This ProviderConfig uses the above AKS cluster's connection secret as
    #     # its credentials secret.
    #     - fromFieldPath: spec.writeConnectionSecretToRef.name
    #       toFieldPath: spec.credentials.secretRef.name
    #       transforms:
    #         - type: string
    #           string:
    #             fmt: "%s-aks"
      readinessChecks:
        - type: None
